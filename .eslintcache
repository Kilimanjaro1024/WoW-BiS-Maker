[{"C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\index.js":"1","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\reportWebVitals.js":"2","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\App.js":"3","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\pages\\BisList.js":"4","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\pages\\Main.js":"5","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\oauth\\client.js":"6","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\pages\\ItemSearch.js":"7","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\Nav.js":"8","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\BisListComp.js":"9","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\ItemsList.js":"10","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\SearchNav.js":"11","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\SlotManager.js":"12","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\Item.js":"13","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\StatSummary.js":"14","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\BisItem.js":"15","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\modal.js":"16"},{"size":607,"mtime":1616888754823,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1616888754827,"results":"19","hashOfConfig":"18"},{"size":3198,"mtime":1619927345756,"results":"20","hashOfConfig":"18"},{"size":504,"mtime":1616888754826,"results":"21","hashOfConfig":"18"},{"size":244,"mtime":1616888754827,"results":"22","hashOfConfig":"18"},{"size":770,"mtime":1619922707405,"results":"23","hashOfConfig":"18"},{"size":1206,"mtime":1616888754826,"results":"24","hashOfConfig":"18"},{"size":609,"mtime":1616888754819,"results":"25","hashOfConfig":"18"},{"size":1791,"mtime":1616888754817,"results":"26","hashOfConfig":"18"},{"size":6662,"mtime":1616888754818,"results":"27","hashOfConfig":"18"},{"size":2748,"mtime":1616888754820,"results":"28","hashOfConfig":"18"},{"size":1546,"mtime":1616888754821,"results":"29","hashOfConfig":"18"},{"size":7695,"mtime":1616888754818,"results":"30","hashOfConfig":"18"},{"size":1009,"mtime":1616888754822,"results":"31","hashOfConfig":"18"},{"size":5643,"mtime":1616888754816,"results":"32","hashOfConfig":"18"},{"size":832,"mtime":1616888754823,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1b54ijb",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\index.js",[],["77","78"],"C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\reportWebVitals.js",[],"C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\App.js",["79","80","81"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport {Route, Switch} from \"react-router-dom\"\r\nimport Main from \"./pages/Main.js\"\r\nimport BisList from \"./pages/BisList.js\"\r\nimport ItemSearch from \"./pages/ItemSearch.js\"\r\nimport Nav from \"./components/Nav.js\"\r\nimport React from \"react\"\r\nimport BlizzAPI from \"blizzapi\"\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction App() {\r\n  const url = \"http://localhost:3000\"  \r\n\r\n  const REACT_APP_TOKEN = \"\";\r\n \r\n  const statsObj = {\r\n    STAMINA: 0,\r\n    STRENGTH: 0,\r\n    INTELLECT: 0,\r\n    AGILITY: 0,\r\n    CRIT_RATING: 0,\r\n    HASTE_RATING: 0,\r\n    MASTERY_RATING: 0,\r\n    VERSATILITY: 0\r\n  }\r\n\r\n  const gearObj = {\r\n    HEAD: \"\",\r\n    SHOULDER: \"\",\r\n    NECK: \"\",\r\n    CLOAK: \"\",\r\n    CHEST: \"\",\r\n    WRIST: \"\",\r\n    HAND: \"\",\r\n    WAIST: \"\",\r\n    LEGS: \"\",\r\n    FEET: \"\",\r\n    FINGER: \"\",\r\n    TRINKET: \"\"\r\n  }\r\n\r\n  let listCount = 0\r\n  const [bisList, setBisList] = React.useState([])\r\n  const [gear, setGear] = React.useState(gearObj)\r\n  const [stats, setStats] = React.useState(statsObj)\r\n  // const [slot, setSlot] = React.useState(gear)\r\n  const [accessToken,setAccessToken] = React.useState(REACT_APP_TOKEN)\r\n\r\n  const getToken = (token) => {\r\n    axios.get(url).then((response) => {\r\n      \r\n      setAccessToken(response.data.message)\r\n    })\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    getToken();\r\n    \r\n  }, [])\r\n\r\n  //#region generate Token\r\n  // React.useEffect(async () =>{\r\n  //   const BnetApi = new BlizzAPI({ region:'us', clientId: REACT_APP_API, clientSecret: REACT_APP_SECRECT });\r\n\r\n  //   BnetApi.getAccessToken()\r\n  //     .then((aToken) => {\r\n  //     setAccessToken(aToken)\r\n  //   });\r\n\r\n  //   // let token = await createAccessToken(REACT_APP_API, REACT_APP_SECRECT)\r\n    \r\n  // }, [])\r\n  // console.log(accessToken)\r\n  // console.log(REACT_APP_API)\r\n  \r\n\r\n\r\n  // const createAccessToken = (apiKey, apiSecret) =>{\r\n  //   // const api = new BlizzAPI({\r\n  //   //   region: 'us',\r\n  //   //   clientId: apiKey,\r\n  //   //   clientSecret: apiSecret\r\n  //   // });\r\n  \r\n  //   // const data = await api.query('/oauth/token');\r\n    \r\n  //   // return data\r\n  // }\r\n  //#endregion\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Main className=\"mainPage\"/>\r\n        </Route>\r\n        <Route exact path=\"/ItemSearch\">\r\n          <Nav/>\r\n          <ItemSearch \r\n            setBisList={setBisList} \r\n            bisList={bisList} \r\n            accessToken={accessToken} \r\n            gear={gear} \r\n            setGear={setGear} \r\n            className=\"mainPage\" \r\n            listCount={listCount}\r\n            setStats={setStats}\r\n            stats={stats}/>\r\n        </Route> \r\n        <Route exact path=\"/BisList\">\r\n          <Nav/>\r\n          <BisList \r\n            bisList={bisList} \r\n            setBisList={setBisList} \r\n            accessToken={accessToken} \r\n            gearObj={gearObj} \r\n            gear={gear} \r\n            setGear={setGear} \r\n            className=\"mainPage\" \r\n            listCount={listCount}\r\n            setStats={setStats}\r\n            stats={stats}/>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\pages\\BisList.js",[],"C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\pages\\Main.js",[],"C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\oauth\\client.js",[],["82","83"],"C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\pages\\ItemSearch.js",[],"C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\Nav.js",[],"C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\BisListComp.js",["84","85","86","87"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BisList from \"../pages/BisList\";\r\nimport Item from \"./Item\"\r\nimport SlotManager from \"./SlotManager.js\"\r\nimport StatSummary from \"./StatSummary\"\r\n\r\nconst BisListComp = ({bisList, setBisList, accessToken, gearObj, setGear, gear, stats, setStats }) => {\r\n    // console.log(bisList)\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"bisListTitle\">      \r\n                    <h4>Best in Slot Items</h4>\r\n            </div>\r\n            <div className=\"bisComp\">\r\n                <SlotManager \r\n                    bisList={bisList} \r\n                    accessToken={accessToken} \r\n                    gearObj={gearObj} \r\n                    gear={gear} \r\n                    setGear={setGear} \r\n                    setBisList={setBisList} \r\n                    setStats={setStats}\r\n                    stats={stats}/>\r\n                \r\n                {/* <StatSummary bisList={bisList}/> */}\r\n                {/* {bisList.map((bisItem) =>{\r\n                    return <Item item={bisItem} accessToken={accessToken} setBisList={setBisList} bisList={bisList}/>\r\n                })} */}\r\n                {/* <div className=\"statsSummary\">\r\n                    <h1>Item Name</h1>\r\n                    <p>stat</p>\r\n                    <p>stat</p>\r\n                    <p>stat</p>\r\n                    <p>stat</p>\r\n                </div>\r\n                <div className=\"itemInspector\">\r\n                    <h1>Item Name</h1>\r\n                    <p>stat</p>\r\n                    <p>stat</p>\r\n                    <p>stat</p>\r\n                    <p>stat</p>\r\n                </div> */}\r\n              \r\n            </div>\r\n            \r\n        </div>\r\n    ) \r\n};\r\n\r\nexport default BisListComp","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\ItemsList.js",["88","89"],"import React from \"react\";\r\nimport Item from \"./Item.js\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ItemList = ({searchName, searchType, searchSlot, setBisList, bisList, accessToken, setGear, gear, setStats, stats}) => {\r\n    // console.log(bisList)\r\n    \r\n    const url = `https://us.api.blizzard.com/data/wow/search/item?namespace=static-us&locale=en_US&name.en_US=${searchName}&orderby=id&_page=1&access_token=${accessToken}`\r\n\r\n    const [items, setItems] = React.useState(null)\r\n\r\n    const getItems = async () =>{\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        setItems(data)\r\n    }\r\n\r\n    React.useEffect(() =>{        \r\n        getItems()\r\n        // console.log(searchName)\r\n    }, [url])\r\n\r\n    const sortBySlot = (typeArr) =>{\r\n        if(searchSlot !== \"\"){\r\n            for (let i = 0; i < items.results.length; i++) {\r\n                if(items.results[i].data.inventory_type.type === searchSlot){\r\n                    typeArr.push(items.results[i])\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const sortByType = (typeArr) =>{\r\n        if(searchType !== \"\"){\r\n            for (let i = 0; i < items.results.length; i++) {\r\n                if(items.results[i].data.item_subclass.name.en_US === searchType){\r\n                    typeArr.push(items.results[i])\r\n                }                    \r\n            }\r\n        }\r\n    }\r\n\r\n    const sortByTypeAndSlot = (typeArr) =>{\r\n        if(searchType !== \"\" && searchSlot !== \"\"){\r\n            for (let i = 0; i < items.results.length; i++) {\r\n                if(items.results[i].data.item_subclass.name.en_US === searchType){\r\n                    if(items.results[i].data.inventory_type.type === searchSlot){\r\n                        typeArr.push(items.results[i])\r\n                    }\r\n                                            \r\n                }\r\n            }\r\n        }    \r\n    }\r\n\r\n    const loaded = () =>{\r\n        // console.log(items.results)\r\n        const typeArr = []\r\n\r\n        //checks if an armor type has been chosen and filters out items that do not match that name.\r\n        \r\n        if(searchType !== \"\" && searchSlot !== \"\"){\r\n            sortByTypeAndSlot(typeArr)\r\n            return(\r\n                <div >\r\n                    {typeArr.map((item) =>{\r\n                        // console.log(items)\r\n                        return(\r\n                            <>\r\n                                <Item item={item.data} \r\n                                    accessToken={accessToken} \r\n                                    setBisList={setBisList} \r\n                                    bisList={bisList} \r\n                                    gear={gear} \r\n                                    setGear={setGear} \r\n                                    setStats={setStats}\r\n                                    stats={stats}/>\r\n                            </>\r\n                        )         \r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n        else if(searchType !== \"\" && searchSlot === \"\")\r\n        {\r\n            sortByType(typeArr)\r\n            return(\r\n                <div >\r\n                    {typeArr.map((item) =>{\r\n                        // console.log(items)\r\n                        return(\r\n                            <>\r\n                                <Item item={item.data} \r\n                                    accessToken={accessToken} \r\n                                    setBisList={setBisList} \r\n                                    bisList={bisList} \r\n                                    gear={gear} \r\n                                    setGear={setGear} \r\n                                    setStats={setStats}\r\n                                    stats={stats}/>\r\n                            </>\r\n                        )         \r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n        else if(searchType === \"\" && searchSlot !== \"\")\r\n        {\r\n            sortBySlot(typeArr)\r\n            return(\r\n                <div >\r\n                    {typeArr.map((item) =>{\r\n                        // console.log(items)\r\n                        return(\r\n                            <>\r\n                                <Item item={item.data} \r\n                                    accessToken={accessToken} \r\n                                    setBisList={setBisList} \r\n                                    bisList={bisList} \r\n                                    gear={gear} \r\n                                    setGear={setGear} \r\n                                    setStats={setStats}\r\n                                    stats={stats}/>\r\n                            </>\r\n                        )         \r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div >\r\n                    {items.results.map((item) =>{\r\n                        // console.log(item)\r\n                        return(\r\n                            <>\r\n                                <Item item={item.data} \r\n                                    accessToken={accessToken} \r\n                                    setBisList={setBisList} \r\n                                    bisList={bisList} \r\n                                    gear={gear} \r\n                                    setGear={setGear} \r\n                                    setStats={setStats}\r\n                                    stats={stats}/>\r\n                            </>\r\n                        )         \r\n                    })}\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n        \r\n        //returns all items that match the search name\r\n        \r\n        \r\n    }\r\n\r\n    const loading = () =>{\r\n        <h1>LOADING...</h1>\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"searchUI\">\r\n                <div className=\"itemList\">\r\n                    <div className=\"itemNav\">      \r\n                        <h4>ICON</h4>\r\n                        <h4>NAME</h4>\r\n                        <h4>TYPE</h4>\r\n                        <h4>ADD</h4>\r\n                    </div>\r\n                    <div className=\"list\">\r\n                        {items ? loaded() : loading()}\r\n                    </div>\r\n                    \r\n                </div>\r\n                {/* <div className=\"itemInspector\">\r\n                    <h1>Item Name</h1>\r\n                    <p>stat</p>\r\n                    <p>stat</p>\r\n                    <p>stat</p>\r\n                    <p>stat</p>\r\n                </div> */}\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemList","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\SearchNav.js",["90","91"],"import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst SearchNav = ({setSearchName, setSearchType, setSearchSlot}) => {\r\n    const [name, setName] = React.useState(\"\")\r\n    const [type, setType] = React.useState(\"\")\r\n    const [slot, setSlot] = React.useState(\"\")\r\n    const handleNameChange = (e) =>{\r\n        setName(e.target.value)\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const handleTypeChange = (e) =>{\r\n        setType(e.target.value)\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const handleSlotChange = (e) =>{\r\n        setSlot(e.target.value)\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        setSearchName(name)\r\n        setSearchType(type)\r\n        setSearchSlot(slot)      \r\n    }\r\n    // console.log(type)\r\n    return (\r\n        <div>\r\n        <form className=\"searchNav\">\r\n            <input \r\n                type=\"text\"\r\n                onChange={handleNameChange} \r\n                name=\"iname\" \r\n                placeholder=\"Item Name\">\r\n            </input>\r\n            <br/>  \r\n            <select \r\n                id=\"types\" \r\n                name=\"types\"\r\n                onChange={handleTypeChange}>\r\n                <option value=\"\"></option>\r\n                <option value=\"Plate\">Plate</option>\r\n                <option value=\"Mail\">Mail</option>\r\n                <option value=\"Leather\">Leather</option>\r\n                <option value=\"Cloth\">Cloth</option>\r\n            </select>\r\n            <select \r\n                id=\"slot\" \r\n                name=\"slots\"\r\n                onChange={handleSlotChange}>\r\n                    <option value={null}></option>\r\n                    <option value=\"HEAD\">Head</option>\r\n                    <option value=\"NECK\">Neck</option>\r\n                    <option value=\"SHOULDER\">Shoulder</option>\r\n                    <option value=\"CLOAK\">Cloak</option>\r\n                    <option value=\"CHEST\">Chest</option>\r\n                    <option value=\"WRIST\">Wrist</option>\r\n                    <option value=\"HAND\">Glove</option>\r\n                    <option value=\"WAIST\">Waist</option>\r\n                    <option value=\"LEGS\">Legs</option>\r\n                    <option value=\"FEET\">Feet</option>\r\n                    <option value=\"TRINKET\">Trinket</option>\r\n                    <option value=\"FINGER\">Finger</option>\r\n                    <option value=\"WEAPON\">Weapon</option>\r\n            </select>\r\n            \r\n            <input\r\n                type=\"Submit\"\r\n                value=\"Submit\"\r\n                onClick={handleClick}\r\n                >\r\n            </input>\r\n        </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchNav\r\n\r\n","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\SlotManager.js",["92","93","94","95"],"import { getRoles } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BisList from \"../pages/BisList\";\r\n\r\nimport BisItem from \"./BisItem\"\r\nimport StatSummary from \"./StatSummary\";\r\n\r\nconst  SlotManager = ({bisList, setBisList, accessToken, gearObj, setGear, gear, stats, setStats}) => {\r\n    \r\n    \r\n    const gearLayout = [gear.HEAD, gear.SHOULDER, gear.NECK, gear.CLOAK, gear.CHEST, gear.WRIST, gear.HAND, gear.WAIST, gear.LEGS, gear.FEET, gear.FINGER, gear.TRINKET]\r\n\r\n    React.useEffect(() => {\r\n        \r\n    }, [gear])\r\n    return (\r\n        <div className=\"slotMng\">\r\n            <StatSummary \r\n                setStats={setStats}\r\n                stats={stats}/>\r\n            {gearLayout.map((item, index) =>{\r\n                console.log(index)\r\n                if(item === undefined){\r\n                    return <img src=\"https://i.imgur.com/INnsE9J.png\" alt=\"\" width=\"56\" height=\"56\" id={`slot${index}`}/>\r\n                }\r\n                else if(item !== \"\"){\r\n                    console.log(item)\r\n                    return <BisItem bisItem={item} accessToken={accessToken} setBisList={setBisList} bisList={bisList} id={`slot${index}`} setBisList={setBisList} setGear={setGear} gear={gear}/>\r\n                }\r\n                else{\r\n                    return <img src=\"https://i.imgur.com/INnsE9J.png\" alt=\"\" width=\"56\" height=\"56\" id={`slot${index}`}/>\r\n                }   \r\n            })}\r\n            \r\n        </div>\r\n    ) \r\n};\r\n\r\nexport default SlotManager","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\Item.js",["96","97","98"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BisItem from \"./BisItem.js\";\r\nimport ModalPopup from\"./modal.js\"\r\n\r\nconst Item = ({item, accessToken, setBisList, bisList, setGear, gear, setStats, stats}) => {\r\n    // console.log(bisList)\r\n    const iconUrl = `https://us.api.blizzard.com/data/wow/media/item/${item.media.id}?namespace=static-us&locale=en_US&access_token=${accessToken}`\r\n    const itemUrl = `https://us.api.blizzard.com/data/wow/item/${item.id}?namespace=static-us&locale=en_US&access_token=${accessToken}`\r\n\r\n    const [icon, setIcon] = React.useState(null)\r\n    const [itemDetails, setItemDetails] = React.useState(null)\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const getIcon = async () =>{\r\n        const response = await fetch(iconUrl)\r\n        const data = await response.json()\r\n        setIcon(data)\r\n    }\r\n    const getItemDetails = async () =>{\r\n        const response = await fetch(itemUrl)\r\n        const data = await response.json()\r\n        setItemDetails(data)\r\n    }\r\n\r\n    const handleClick = () =>{\r\n        console.log(\"Clicked\")\r\n        setModalShow(true)\r\n    }\r\n\r\n    React.useEffect(() =>{ \r\n        if(bisList.length > listCount){\r\n            listCount = 0\r\n        }       \r\n        getIcon()\r\n        getItemDetails()\r\n    }, [iconUrl,itemUrl])\r\n\r\n    const updateStats = (curItem) => {\r\n        console.log(curItem.preview_item.stats)\r\n        const newStats = {...stats}\r\n                for (let x = 0; x < curItem.preview_item.stats.length; x++) {\r\n                    \r\n                    if(curItem.preview_item.stats[x].type.type === \"INTELLECT\"){\r\n                        newStats.INTELLECT+= curItem.preview_item.stats[x].value   \r\n                    }\r\n                    else if(curItem.preview_item.stats[x].type.type === \"STAMINA\"){\r\n                        newStats.STAMINA+= curItem.preview_item.stats[x].value\r\n                    }\r\n                    else if(curItem.preview_item.stats[x].type.type === \"STRENGTH\"){\r\n                        newStats.STRENGTH+= curItem.preview_item.stats[x].value\r\n                    }\r\n                    else if(curItem.preview_item.stats[x].type.type === \"AGILITY\"){\r\n                        newStats.AGILITY+= curItem.preview_item.stats[x].value\r\n                    }\r\n                    else if(curItem.preview_item.stats[x].type.type === \"CRIT_RATING\"){\r\n                        newStats.CRIT_RATING+= curItem.preview_item.stats[x].value\r\n                    }\r\n                    else if(curItem.preview_item.stats[x].type.type === \"VERSATILITY\"){\r\n                        newStats.VERSATILITY+= curItem.preview_item.stats[x].value\r\n                    }\r\n                    else if(curItem.preview_item.stats[x].type.type === \"HASTE_RATING\"){\r\n                        newStats.HASTE_RATING+= curItem.preview_item.stats[x].value\r\n                    }\r\n                    else if(curItem.preview_item.stats[x].type.type === \"MASTERY_RATING\"){\r\n                        newStats.MASTERY_RATING+= curItem.preview_item.stats[x].value\r\n                    } \r\n                }\r\n                setStats(newStats)       \r\n            \r\n\r\n    }\r\n    const updateBis = () => {\r\n        const newGear = {...gear}\r\n        console.log(item.inventory_type.type)\r\n        if(item.inventory_type.type === \"HEAD\"){\r\n            newGear.HEAD = item\r\n            updateStats(itemDetails) \r\n            \r\n         }\r\n         else if(item.inventory_type.type === \"CHEST\"){\r\n            newGear.CHEST = item\r\n             console.log(\"Bruh\")\r\n             updateStats(itemDetails) \r\n             \r\n          }\r\n          else if(item.inventory_type.type === \"SHOULDER\"){\r\n            newGear.SHOULDER = item\r\n            updateStats(itemDetails) \r\n         }\r\n         else if(item.inventory_type.type === \"NECK\"){\r\n            newGear.NECK = item\r\n            updateStats(itemDetails) \r\n         }\r\n         else if(item.inventory_type.type === \"LEGS\"){\r\n            newGear.LEGS = item\r\n            updateStats(itemDetails) \r\n         }\r\n         else if(item.inventory_type.type === \"HAND\"){\r\n            newGear.HAND = item\r\n            updateStats(itemDetails) \r\n         }\r\n         else if(item.inventory_type.type === \"WRIST\"){\r\n            newGear.WRIST = item\r\n            updateStats(itemDetails) \r\n         }\r\n         else if(item.inventory_type.type === \"WAIST\"){\r\n            newGear.WAIST = item\r\n            updateStats(itemDetails) \r\n         }\r\n         else if(item.inventory_type.type === \"FEET\"){\r\n            newGear.FEET = item\r\n            updateStats(itemDetails) \r\n         }\r\n         else if(item.inventory_type.type === \"CLOAK\"){\r\n            newGear.CLOAK = item\r\n            updateStats(itemDetails) \r\n         }\r\n         else if(item.inventory_type.type === \"FINGER\"){\r\n            newGear.FINGER = item\r\n            updateStats(itemDetails) \r\n         }\r\n         else if(item.inventory_type.type === \"TRINKET\"){\r\n            newGear.TRINKET = item\r\n            updateStats(itemDetails) \r\n         }\r\n         setGear(newGear)\r\n\r\n    }\r\n    let listCount = 0\r\n    const addToBisList = () =>{\r\n        console.log(\"add\")\r\n        const newList = bisList\r\n        if(bisList.length === 0){\r\n            setBisList(bisList =>[...bisList, itemDetails])\r\n            console.log(bisList)\r\n            updateBis()  \r\n        }\r\n        else{\r\n            for(let i = 0; i< bisList.length; i++){\r\n                console.log(bisList[i])\r\n                if(bisList[i].inventory_type.type !== itemDetails.inventory_type.type){\r\n                    listCount++\r\n                    if(listCount === bisList.length){\r\n                        newList.push(itemDetails)\r\n                        // setBisList(bisList =>[...bisList, itemDetails])\r\n                        console.log(bisList)\r\n                        updateBis()\r\n                    }\r\n                    setBisList(newList)\r\n                }\r\n                else{\r\n                    console.log(\"error\")\r\n                }\r\n            }\r\n            \r\n        }   \r\n    }\r\n\r\n    const loaded = () =>{\r\n        if(itemDetails !== null && itemDetails.preview_item.stats !== undefined){\r\n            // console.log(itemDetails.preview_item)\r\n            return(\r\n                <>\r\n                    <ModalPopup\r\n                            show={modalShow}\r\n                            onHide={() => setModalShow(false)}\r\n                            icon={<img src={icon.assets[0].value} alt=\"\"></img>}\r\n                            itemName={item.name.en_US}\r\n                            itemStats={<div>                        \r\n                                {itemDetails.preview_item.stats.map((stat) =>{\r\n                                    return <p>{stat.type.name}: {stat.value}</p>   \r\n                                })} \r\n                            </div>}\r\n                            buttonText=\"Add\"\r\n                            buttonFunction={addToBisList}\r\n                        />\r\n                    <div className=\"item\">\r\n                        <img src={icon.assets[0].value} alt=\"\" onClick={handleClick}/>\r\n                        <p>{item.name.en_US}</p>\r\n                        <p>{item.item_subclass.name.en_US}</p>\r\n                        <button onClick={addToBisList} className=\"btn btn-primary\">+</button>    \r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const loading = () =>{\r\n        <h1>LOADING...</h1>\r\n    }\r\n    return (\r\n        <div className=\"itemContainer\">\r\n            {icon ? loaded() : loading()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Item","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\StatSummary.js",["99","100"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StatSummary = ({bisList, stats, setStats}) => {\r\n\r\n    \r\n\r\n    // const [stats, setStats] = React.useState(statsObj)\r\n    \r\n    const summarizeStats = () =>{\r\n        \r\n    }\r\n\r\n    // React.useEffect(() =>{\r\n    //     summarizeStats()\r\n    // }, [])\r\n    // console.log(bisList)\r\n    return (\r\n        <div className=\"stats\">\r\n            <p className=\"primary\">STRENGTH: {stats.STRENGTH}</p>\r\n            <p className=\"primary\">STAMINA: {stats.STAMINA}</p>\r\n            <p className=\"primary\">AGILITY: {stats.AGILITY}</p>\r\n            <p className=\"primary\">INTELLECT: {stats.INTELLECT}</p>\r\n            <p className=\"secondary\">CRIT: {stats.CRIT_RATING}</p>\r\n            <p className=\"secondary\">MASTERY: {stats.MASTERY_RATING}</p>\r\n            <p className=\"secondary\">HASTE: {stats.HASTE_RATING}</p>\r\n            <p className=\"secondary\">VERS: {stats.VERSATILITY}</p>\r\n        </div>\r\n    ) \r\n};\r\n\r\nexport default StatSummary","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\BisItem.js",["101","102","103","104","105","106"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ModalPopup from\"./modal.js\"\r\nimport Modal from \"react-bootstrap/Modal\"\r\n\r\nimport Item from \"./Item.js\"\r\n\r\nconst BisItem = ({bisItem, bisList, setBisList, accessToken, id, gear, setGear}) => {\r\n    const itemNum = bisItem\r\n    const iconUrl = `https://us.api.blizzard.com/data/wow/media/item/${bisItem.media.id}?namespace=static-us&locale=en_US&access_token=${accessToken}`\r\n    const itemUrl = `https://us.api.blizzard.com/data/wow/item/${bisItem.id}?namespace=static-us&locale=en_US&access_token=${accessToken}`\r\n\r\n    const [icon, setIcon] = React.useState(null)\r\n    const [itemDetails, setItemDetails] = React.useState(null)\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const getIcon = async () =>{\r\n        const response = await fetch(iconUrl)\r\n        const data = await response.json()\r\n        setIcon(data)\r\n    }\r\n    const getItemDetails = async () =>{\r\n        const response = await fetch(itemUrl)\r\n        const data = await response.json()\r\n        setItemDetails(data)\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n        getIcon()\r\n        getItemDetails()      \r\n    }, [])\r\n\r\n    const updateBis = () =>{\r\n        if(bisItem.inventory_type.type === \"HEAD\"){     \r\n            console.log(\"hello\")                       \r\n            setGear({\r\n                ...gear,\r\n                HEAD: \"\",\r\n                \r\n            })\r\n            console.log(gear)           \r\n         }\r\n         else if(bisItem.inventory_type.type === \"CHEST\"){\r\n             console.log(\"hello\")          \r\n             setGear({\r\n              ...gear,\r\n            //   CHEST: \"\"\r\n             })\r\n             console.log(gear)\r\n          }\r\n          else if(bisItem.inventory_type.type === \"SHOULDER\"){     \r\n            setGear({\r\n             ...gear,\r\n            //  SHOULDER: \"\"\r\n            })\r\n            console.log(gear)        \r\n         }\r\n         else if(bisItem.inventory_type.type === \"NECK\"){      \r\n            setGear({\r\n             ...gear,\r\n            //  NECK: \"\"\r\n            })\r\n            console.log(gear)    \r\n         }\r\n         else if(bisItem.inventory_type.type === \"LEGS\"){  \r\n            setGear({\r\n             ...gear,\r\n            //  LEGS: \"\"\r\n            })\r\n            console.log(gear)    \r\n         }\r\n         else if(bisItem.inventory_type.type === \"HAND\"){    \r\n            setGear({\r\n             ...gear,\r\n            //  HAND: \"\"\r\n            })\r\n            console.log(gear)   \r\n         }\r\n         else if(bisItem.inventory_type.type === \"WRIST\"){ \r\n            setGear({\r\n             ...gear,\r\n            //  WRIST: \"\"\r\n            })\r\n            console.log(gear)\r\n         }\r\n         else if(bisItem.inventory_type.type === \"WAIST\"){\r\n            setGear({\r\n             ...gear,\r\n            //  WAIST: \"\"\r\n            })\r\n            console.log(gear)\r\n         }\r\n         else if(bisItem.inventory_type.type === \"FEET\"){\r\n            setGear({\r\n             ...gear,\r\n            //  FEET: \"\"\r\n            })\r\n            console.log(gear)\r\n         }\r\n         else if(bisItem.inventory_type.type === \"CLOAK\"){\r\n            setGear({\r\n             ...gear,\r\n            //  CLOAK: \"\"\r\n            })\r\n            console.log(gear)\r\n         }\r\n         else if(bisItem.inventory_type.type === \"FINGER\"){ \r\n            setGear({\r\n             ...gear,\r\n            //  FINGER: \"\"\r\n            })\r\n            console.log(gear)\r\n         }\r\n         else if(bisItem.inventory_type.type === \"TRINKET\"){ \r\n            setGear({\r\n             ...gear,\r\n            //  TRINKET: \"\"\r\n            })\r\n            console.log(gear)\r\n         }\r\n         \r\n\r\n    }\r\n\r\n    const handleClick = () =>{\r\n        console.log(\"Clicked\")\r\n        setModalShow(true)\r\n    }\r\n\r\n    const handleRemove = (bis) =>{\r\n        \r\n        // for (let i = 0; i < bisList.length; i++) {\r\n        //     if(bisList[i].id === bisItem.id){\r\n        //         index = i      \r\n        //     }\r\n        // }\r\n        setBisList(bisList.filter((item) => (item.name.en_US !== bis)))\r\n        updateBis()\r\n        console.log(bisList)\r\n        setModalShow(false)\r\n    }\r\n\r\n    const loaded = () =>{\r\n        // return <h1>bisItem</h1>\r\n        if(itemDetails !== null){\r\n            \r\n            // console.log(itemDetails.preview_item)\r\n            return(\r\n                <>\r\n                    <ModalPopup\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                        icon={<img src={icon.assets[0].value} alt=\"\"></img>}\r\n                        itemName={bisItem.name.en_US}\r\n                        itemStats={\r\n                            <div>                        \r\n                                {itemDetails.preview_item.stats.map((stat) =>{\r\n                                    return <p>{stat.type.name}: {stat.value}</p>   \r\n                                })} \r\n                            </div>}\r\n                        // buttonText=\"Remove\"\r\n                        // buttonFunction={handleRemove}\r\n                        // itemInfo={bisItem}\r\n                    />\r\n                    <div>                     \r\n                        <img src={icon.assets[0].value} alt=\"\" onClick={handleClick}></img>\r\n                    </div>\r\n                    </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const loading = () =>{\r\n        <h1>LOADING...</h1>\r\n    }\r\n    return (\r\n        <div className=\"bisItem\" id={id}>\r\n            {icon ? loaded() : loading()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BisItem","C:\\Users\\clay_\\OneDrive\\Desktop\\WoW-BiS-Maker\\src\\components\\modal.js",[],["107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":12},{"ruleId":"113","severity":1,"message":"117","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":59,"column":19,"nodeType":"120","endLine":62,"endColumn":4},{"ruleId":"109","replacedBy":"121"},{"ruleId":"111","replacedBy":"122"},{"ruleId":"113","severity":1,"message":"123","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":15},{"ruleId":"113","severity":1,"message":"125","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":12},{"ruleId":"113","severity":1,"message":"126","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":19},{"ruleId":"113","severity":1,"message":"123","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"127","line":21,"column":8,"nodeType":"128","endLine":21,"endColumn":13,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"130","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":27},{"ruleId":"113","severity":1,"message":"123","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"131","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"123","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":29,"column":140,"nodeType":"134","endLine":29,"endColumn":163},{"ruleId":"113","severity":1,"message":"123","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"135","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":15},{"ruleId":"118","severity":1,"message":"136","line":33,"column":25,"nodeType":"137","endLine":33,"endColumn":26},{"ruleId":"113","severity":1,"message":"123","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"138","line":10,"column":11,"nodeType":"115","messageId":"116","endLine":10,"endColumn":25},{"ruleId":"113","severity":1,"message":"123","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"139","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":13},{"ruleId":"113","severity":1,"message":"125","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":12},{"ruleId":"113","severity":1,"message":"140","line":9,"column":11,"nodeType":"115","messageId":"116","endLine":9,"endColumn":18},{"ruleId":"118","severity":1,"message":"141","line":31,"column":8,"nodeType":"128","endLine":31,"endColumn":10,"suggestions":"142"},{"ruleId":"113","severity":1,"message":"143","line":130,"column":11,"nodeType":"115","messageId":"116","endLine":130,"endColumn":23},{"ruleId":"109","replacedBy":"144"},{"ruleId":"111","replacedBy":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BlizzAPI' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["146"],["147"],"'Link' is defined but never used.","'BisList' is defined but never used.","'Item' is defined but never used.","'StatSummary' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'useContext' is defined but never used.","'getRoles' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BisItem' is defined but never used.","Assignments to the 'listCount' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Literal","'summarizeStats' is assigned a value but never used.","'Modal' is defined but never used.","'itemNum' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getIcon' and 'getItemDetails'. Either include them or remove the dependency array.",["149"],"'handleRemove' is assigned a value but never used.",["146"],["147"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [getItems, url]",{"range":"154","text":"155"},"Update the dependencies array to be: [getIcon, getItemDetails]",{"range":"156","text":"157"},[748,753],"[getItems, url]",[1183,1185],"[getIcon, getItemDetails]"]